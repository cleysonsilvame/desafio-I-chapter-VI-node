service: desafio-I-chapter-VI-node

frameworkVersion: ">=2.0.0"

useDotenv: true

provider:
  name: aws
  runtime: nodejs14.x
  region: eu-west-1
  apiGateway:
    minimumCompressionSize: 1024
    shouldStartNameWithService: true
  environment:
    DYNAMODB_TABLE: todos
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  create:
    handler: src/todos/create.create
    events:
      - http:
          path: todos/{id}
          method: post
          cors: true

  list:
    handler: src/todos/list.list
    events:
      - http:
          path: todos/{id}
          method: get
          cors: true   

resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
plugins:
  - serverless-esbuild
  - serverless-dynamodb-local
  - serverless-offline

custom:
  dynamodb:
    stages:
      - dev
      - local
    start:
      docker: true
      port: 8000
      inMemory: true
      migrate: true
      seed: true
      convertEmptyValues: true
  esbuild: 
    bundle: true
    minify: false
    sourcemap: true
    exclude: 
      - 'aws-sdk'
    target: 'node14'
    platform: 'node'
    concurrency: 10
  
